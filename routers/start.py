from aiogram import Router, Bot
from aiogram.filters import Command
from aiogram.types import Message

from keyboards import main_reply, admin_reply, subscribe_inline, rules_inline
from core import IsAdmin

router = Router()

WELCOME_MSG = """‚ú® *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å\!*
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç *–û–ê–û –ö–ì–¢–°\!*

–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å –æ—Ç –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ üéß,
–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É "üéß –ü–æ–¥–¥–µ—Ä–∂–∫–∞" –Ω–∏–∂–µ\.üëá
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ"""

ADMIN_MSG = """‚ú® *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å\!*
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é *–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä*\!
–î–ª—è –ø–æ–∏—Å–∫–∞ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ\. üëá
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
‚ùó `–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–∏–¥—è—Ç —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã\.`"""

SUBSCRIBE_MSG = """‚ùå *–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã*
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
*–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª\.*
–ü–æ—Å–ª–µ, *–Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É* '‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å'
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ"""

RULES_MSG = """üìï *–ü—Ä–∞–≤–∏–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è*
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
*1\.* –ü–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É,
–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –µ—Å—Ç—å –ª–∏ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å –≤ –º–æ–µ–π –±–∞–∑–µ\.

*2\.* –ï—Å–ª–∏ –≤–∞—à –≤–æ–ø—Ä–æ—Å –Ω–µ –Ω–∞–π–¥–µ–º –≤ –º–æ–µ–π –±–∞–∑–µ,
–ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ—Ä–∞–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à –≤–æ–ø—Ä–æ—Å\.

–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ\. üëá
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ"""

CHANNEL_ID = '-1002192731130'

async def check_user_subscription(message: Message, bot: Bot, user_level: int):
    if user_level == 0:
        user_status = await bot.get_chat_member(chat_id=CHANNEL_ID, user_id=message.from_user.id)
        if user_status.status != 'left':
            bot.db.update({"user_id": message.from_user.id}, {'$set': {"level": 1}})
        else:
            await message.answer(SUBSCRIBE_MSG, reply_markup=subscribe_inline(None))
    elif user_level == 1:
        await message.answer(RULES_MSG, reply_markup=rules_inline(message.from_user.id))
    elif user_level == 2:
        await message.answer(WELCOME_MSG, reply_markup=main_reply())

@router.message(Command(commands="start"))
async def start_handler(message: Message, bot: Bot):
    db = bot.db
    db.use_collection("users")
    
    user = db.find({"user_id": message.from_user.id})

    if user:
        await check_user_subscription(message, bot, user["level"])
    else:
        db.insert({
            "username": message.from_user.username,
            "user_id": message.from_user.id,
            "first_name": message.from_user.first_name,
            "second_name": message.from_user.last_name,
            "level": 0,
            "current_support": 0,
        })
        await check_user_subscription(message, bot, 0)
        db.update({"user_id": "stats"}, {"$set": {"users": db.find({"user_id": "stats"})["users"]+1}})

@router.message(Command(commands="admin"), IsAdmin())
async def admin_handler(message: Message):
    await message.answer(ADMIN_MSG, reply_markup=admin_reply())